#coding:utf-8
import binascii
import gmpy2
from Crypto.Util.number import *

p=165183720742741436051373219716388644270093189046466421563632727622389425827620783096218651072108769567350808642169644915755493944233905573858905774991122631609402471527613272585988802294622263573574301013199411535656758222265554222107815469076608655188293263358371274025455477828555535371028164366376886408977
q=120848273460784230746197749214740170558670241437030497317956826606952430354830550737450520592481405802317202852411775956584677841602475259120706429378240071206662182089399302414435162197602907213282222144680788273948123482886712835590321726087823477518087588076504167863011019333002124841000448268076303735731
e=33
c=10407733127291995335613764691145477155502676597183852092212444772475748406250517097288411248334115120781386833588013995106957807313657632637086223225958539244315092039575434338289689184523710991223212333496000621300008178955253701172159259970353872359828291763446333588873982621853358272632447440961028670921631505593309092190417674648927653583956106734654954561031328286272044755552317084498103486458373580383410475085969677647030080606373264155592552338785789990114607084241499363324045488462563945268471178702696791804080490936763759252660049728533344304874474003893472238560682850602644793844258072019357796047919

n = p*q

phi_n=(p - 1) * (q - 1)

print(GCD(e,phi_n))

# 由于phi_n和e不互素，所以先对e2求出d2,和对应的m2
e2=e/GCD(e,phi_n)
d2 = inverse(e, phi_n)
m2 = pow(c, d2, n)
# print(m2)

# 再对m2进行低加密指数攻击的爆破，获得flag
i=0
while True:
    print(i)
    m, bflag = gmpy2.iroot(m2, 3)

    if bflag:
        print(hex(m))
        break
    m2 += n
    i+=1

print("DEC:", m)
mi = long_to_bytes(m)
print("STRIING:",mi)
message = binascii.hexlify(mi)
print("HEX:",message.decode())
