#coding:utf-8
#RSA差异计算解码计算器，已知超大数n1,c1和n2,c2使用相同一个质因数相同e加密
# Modified By MAX230 20210912

from Crypto.Util.number import *
import binascii

n1 = 21625767443834708096392892774328189860060754513275908028294345510420748194882754018911203211362465558586841976381462873050507360801589039235225244082861166319421979738914186892059484949806535554062245253290330123467048783996350636737484343200878982965010131888563619327893974949388881839482558198830741967610439000572011923123876379403738941985909738971550788386512445557542800980441366295263755736400304268528932309073258918565257197792854745240731544461809947995313207112589526702135980331727235588684479165739087173548415428301099311329764446094053941555927350556594367931954161510533802388893190150143476189275393
c1 = 12408521460040906074903008129253214511313955982369572572378807879003652364607583433934403618446464622106226719761372913545977650067660558570358767123913911001606976678088871380795122148597703637472036818261910162601161832688068707339174728964646835582567018577569304986673611166308460783283079267934444437498306288110384721630660839496521202874607212943186863048868135138638892192552534284066892219914416489820201538990526683122691861843227110129439573745449696104197613972776487415717190140123206282079768975376386520023946954548690492705029991264775133912518497214239596673394194613017839709460353541562603273838114
n2 = 26629903094385504764016909443409440503392051524586912519597893563563297677800068252417563000066625886816831290393257888364686548009896341377711253700833856016132614499610667903607411733290993726531341114084468723501090090898946115455615353557624138622136680633395103564143733038564582110915400971683855988428281340374200014871264412462251570943112747478146356686492417714007058334474156965534105390581279833973886172957494107258660671021681564187435357831530059948085586399278807784992444109077817573529005275345216868236241563652007778799266646895973151043268869280114681696296070427187113676256969001206934835016119
c2 = 23683890582395063232100236421081903662045157785647597516303825854955266284371109382602897346383761671334983895862545318032091450250064693677825945114612624650868861174579358090986603589048372734990230572563623811469533040120923443039102191718065376027359284582787225160469257195534907021302942112261938221201015193048529260968839762945202423936505381393305406088982572355801837747200555779166592913619663632363585204205074730213934813731193264114275436868937883607709008436405496678724593261552712219943709911553315927362557244387251767226968687990086373746163944617226463496544604152185572538140165881540248221181358
e = 65537

p = GCD(n1, n2)
q1 = n1 // p
q2 = n2 // p

assert p * q1 == n1
assert p * q2 == n2

phi_n1 = (p - 1) * (q1 - 1)
phi_n2 = (p - 1) * (q2 - 1)

d1 = inverse(e, phi_n1)
d2 = inverse(e, phi_n2)

m1 = pow(c1, d1, n1)
m2 = pow(c2, d2, n2)


print("DEC:")
print(m1)
print(m2)
print("STRING:")
print(long_to_bytes(m1))
print(long_to_bytes(m2))
print("HEX:")
print(binascii.hexlify(long_to_bytes(m1)))
print(binascii.hexlify(long_to_bytes(m2)))
